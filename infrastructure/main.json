{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "4773612666531128838"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "taskmanager",
      "metadata": {
        "description": "Application name prefix"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for deployment"
      }
    },
    "repositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/GokulAnithaNandakumar/processity-task",
      "metadata": {
        "description": "GitHub repository URL for Static Web App"
      }
    },
    "repositoryBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "GitHub branch for deployment"
      }
    },
    "githubToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "GitHub personal access token for Static Web App"
      }
    },
    "mongoConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "MongoDB connection string for the database"
      }
    },
    "jwtSecret": {
      "type": "securestring",
      "metadata": {
        "description": "JWT secret key for authentication"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "appServicePlanName": "[format('{0}-plan-{1}-{2}', parameters('appName'), parameters('environment'), variables('uniqueSuffix'))]",
    "backendAppName": "[format('{0}-api-{1}-{2}', parameters('appName'), parameters('environment'), variables('uniqueSuffix'))]",
    "frontendAppName": "[format('{0}-web-{1}-{2}', parameters('appName'), parameters('environment'), variables('uniqueSuffix'))]",
    "keyVaultName": "[format('{0}kv{1}{2}', parameters('appName'), parameters('environment'), take(variables('uniqueSuffix'), 6))]",
    "logAnalyticsName": "[format('{0}-logs-{1}-{2}', parameters('appName'), parameters('environment'), variables('uniqueSuffix'))]",
    "appInsightsName": "[format('{0}-insights-{1}-{2}', parameters('appName'), parameters('environment'), variables('uniqueSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[if(equals(parameters('environment'), 'prod'), 'B1', 'F1')]",
        "tier": "[if(equals(parameters('environment'), 'prod'), 'Basic', 'Free')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "tags": {
        "Environment": "[parameters('environment')]",
        "Application": "[parameters('appName')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      },
      "tags": {
        "Environment": "[parameters('environment')]",
        "Application": "[parameters('appName')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      },
      "tags": {
        "Environment": "[parameters('environment')]",
        "Application": "[parameters('appName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enableRbacAuthorization": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7
      },
      "tags": {
        "Environment": "[parameters('environment')]",
        "Application": "[parameters('appName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('backendAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "NODE|20-lts",
          "appSettings": [
            {
              "name": "NODE_ENV",
              "value": "production"
            },
            {
              "name": "PORT",
              "value": "8080"
            },
            {
              "name": "MONGODB_URI",
              "value": "[parameters('mongoConnectionString')]"
            },
            {
              "name": "JWT_SECRET",
              "value": "[parameters('jwtSecret')]"
            },
            {
              "name": "JWT_EXPIRES_IN",
              "value": "7d"
            },
            {
              "name": "CORS_ORIGIN",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', variables('frontendAppName')), '2023-01-01').defaultHostname)]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "20-lts"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', variables('frontendAppName')), '2023-01-01').defaultHostname)]",
              "http://localhost:5173",
              "http://localhost:3000"
            ],
            "supportCredentials": false
          },
          "healthCheckPath": "/api/health"
        },
        "httpsOnly": true,
        "clientAffinityEnabled": false
      },
      "tags": {
        "Environment": "[parameters('environment')]",
        "Application": "[parameters('appName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Web/staticSites', variables('frontendAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2023-01-01",
      "name": "[variables('frontendAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "[parameters('repositoryUrl')]",
        "branch": "[parameters('repositoryBranch')]",
        "repositoryToken": "[parameters('githubToken')]",
        "buildProperties": {
          "appLocation": "/frontend",
          "outputLocation": "dist",
          "skipGithubActionWorkflowGeneration": false
        }
      },
      "tags": {
        "Environment": "[parameters('environment')]",
        "Application": "[parameters('appName')]"
      }
    },
    {
      "type": "Microsoft.Web/staticSites/config",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', variables('frontendAppName'), 'appsettings')]",
      "properties": {
        "VITE_API_URL": "[format('https://{0}/api', reference(resourceId('Microsoft.Web/sites', variables('backendAppName')), '2023-01-01').defaultHostName)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('backendAppName'))]",
        "[resourceId('Microsoft.Web/staticSites', variables('frontendAppName'))]"
      ]
    }
  ],
  "outputs": {
    "backendUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('backendAppName')), '2023-01-01').defaultHostName)]"
    },
    "frontendUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', variables('frontendAppName')), '2023-01-01').defaultHostname)]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString]"
    }
  }
}